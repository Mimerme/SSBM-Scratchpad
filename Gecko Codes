Gecko Codes
------------

[Modify a PICo.dat value YYYYYYYY given offset XXXXXX]
2265CC14 8111f880 ;Get the current menu. If it is not 8111f880 the player is not on the CSS
40000000 804d6554 ;Get the location from the PICo.dat pointer and store it in the base address
CE000000 80008180 ;Check to make sure ba+XXXXXX is valid
04XXXXXX YYYYYYYY ;actually write to the address
40000000 80000000 ;Set the base address back to 8000000

[ASM Hooks into Main character loop]
[Range: 8006ad10 - 8006b828]

;This block replaces the 'mtlr r0' instruction originally at 0x80033cd8
;Which is the last instruction before 'blr' of the 'Set Inital Stock Count' function

[CODE]
mtlr r0
lis r5, 0x804D 		;Load the constant into the upper half
ori r5, r5, 0x6554  ;Load the constant into the lower half
lwz r6, 0(r5) 		;Dereference to find the memory address of the first PICo.dat value
addi r6, r6, 0x260 	;add an offset to the mem address
lis r7, 0x4270
ori r7, r7, 0x0000  ;Load the new shield HP into r7
stw r7, 0(r6) 		;replace the shield HP
blr

[Log to 0x803fa3e8 (The debug menu memory location) Given a value YYYYYYYY]
043fa3e8 YYYYYYYY

[Log the base addrss]
44000000 803fa3e8

[Fixed camera]
04452c6c 00000004

[ASM Code]
; INJ @ 8006b80c -- for each player, each frame
; r31 = contextual player data start address

; infinite shield code
lis r15, 0x4270		; Load FP 60.0 into r6
stw r15, 0x1998(r31)	; Store the FP into the memory addres of shield HP
; gecko will compile a return branch to the line after your injection hook

;Player physics ASM
lis r15, 0x3dcc		  ; Set gravity value in the upper half
ori r15, r15, 0xcccd  ; Set gravity value in the lower half
stw r15, 0x16C(r31) ;Increase the gravity

;Always Tilt Forward ASM
lwz r15, 0x10(r31)		;Load the 'player_action' data into r15
cmpi 0, r15, 0x0000000b3;Compare and store result in Compare Register (CR) field 0

bc 0b01100, 2, 8 		;Branch if the 2nd bit (is equals) is TRUE. If so branch 8 bytes (1 instruction) ahead and continue with the shield angle code
b 20					;Relative branch 32 bytes (3 instructions ahead)
lis r15, 0x3f80
stw r15, 0x2344(r31)
lis r15, 0x4120
stw r15, 0x2348(r31)

; reset r15 back to 0
lis r15, 0x0000

; original hook instruction
lwz r0, 0x007C (sp)

[Code]
C206B80C 00000002
3CC04270 90DF1998
8001007C 00000000